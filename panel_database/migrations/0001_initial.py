# Generated by Django 3.1.1 on 2020-10-30 11:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('variant_type', models.CharField(choices=[('cnv_gain', 'cnv_gain'), ('cnv_loss', 'cnv_loss')], max_length=100)),
            ],
            options={
                'db_table': 'cnv',
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'gene',
            },
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panelapp_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=100)),
                ('signedoff', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'panel',
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'reference',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chrom', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('X', 'X'), ('Y', 'Y')], max_length=100)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('reference_id', models.ForeignKey(db_column='reference_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.reference')),
            ],
            options={
                'db_table': 'region',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_id', models.CharField(max_length=100)),
                ('name', models.TextField(max_length=200)),
                ('method', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=100)),
                ('gemini_name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'test',
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refseq', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=100)),
                ('gene_id', models.ForeignKey(db_column='gene_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.gene')),
            ],
            options={
                'db_table': 'transcript',
            },
        ),
        migrations.CreateModel(
            name='TestPanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panel_id', models.ForeignKey(db_column='panel_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.panel')),
                ('test_id', models.ForeignKey(db_column='test_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.test')),
            ],
            options={
                'db_table': 'test_panel',
            },
        ),
        migrations.CreateModel(
            name='TestGene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.ForeignKey(db_column='gene_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.gene')),
                ('test_id', models.ForeignKey(db_column='test_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.test')),
            ],
            options={
                'db_table': 'test_gene',
            },
        ),
        migrations.CreateModel(
            name='Str',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('repeated_sequence', models.CharField(max_length=100)),
                ('nb_repeats', models.IntegerField()),
                ('nb_pathogenic_repeats', models.IntegerField()),
                ('gene_id', models.ForeignKey(db_column='gene_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.gene')),
            ],
            options={
                'db_table': 'str',
            },
        ),
        migrations.CreateModel(
            name='RegionStr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.ForeignKey(db_column='region_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.region')),
                ('str_id', models.ForeignKey(db_column='str_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.str')),
            ],
            options={
                'db_table': 'region_str',
            },
        ),
        migrations.CreateModel(
            name='RegionCnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnv_id', models.ForeignKey(db_column='cnv_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.cnv')),
                ('region_id', models.ForeignKey(db_column='region_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.region')),
            ],
            options={
                'db_table': 'region_cnv',
            },
        ),
        migrations.CreateModel(
            name='PanelStr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panel_id', models.ForeignKey(db_column='panel_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.panel')),
                ('str_id', models.ForeignKey(db_column='str_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.str')),
            ],
            options={
                'db_table': 'panel_str',
            },
        ),
        migrations.CreateModel(
            name='PanelGene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.ForeignKey(db_column='gene_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.gene')),
                ('panel_id', models.ForeignKey(db_column='panel_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.panel')),
            ],
            options={
                'db_table': 'panel_gene',
            },
        ),
        migrations.CreateModel(
            name='PanelCnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnv_id', models.ForeignKey(db_column='cnv_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.cnv')),
                ('panel_id', models.ForeignKey(db_column='panel_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.panel')),
            ],
            options={
                'db_table': 'panel_cnv',
            },
        ),
        migrations.AddField(
            model_name='gene',
            name='clinical_transcript_id',
            field=models.ForeignKey(db_column='clinical_transcript_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.transcript'),
        ),
        migrations.CreateModel(
            name='Exon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('region_id', models.ForeignKey(db_column='region_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.region')),
                ('transcript_id', models.ForeignKey(db_column='transcript_id', on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.transcript')),
            ],
            options={
                'db_table': 'exon',
            },
        ),
    ]
